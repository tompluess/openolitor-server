include "openolitor-server-test"

openolitor {
  run-proxy-service: true,
  port: 8080,
  port: ${?PORT},
  mandanten: ["csa8", "csa7", "landolfshausen", "nuertingen", "nordheide", "kassel", "ulm", "dublincsa"],
  csa8: {
    name: "csa8",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix = ""
      referenznummer-prefix = ${?OO_SERVICES.buchhaltung-object.csa8.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length = 6
      kunde-id-length = 5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer = "777777777"
      teilnehmernummer = ${?OO_SERVICES.buchhaltung-object.csa8.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://csa8wwwtest.applicationcloud.io"]
      }
      zugang-base-url = "https://csa8wwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url = "https://csa8wwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require = false
        require = ${?OO_SERVICES.security-object.csa8.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
    akka-persistence-sql-async {
      url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.database}
      user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.username}
      password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.password}
    }

    # Mandant specific db settings
    db: {
      default: {
        url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.database}
        user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.username}
        password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA8.credentials.password}
      }
    }

    s3 {
      aws-endpoint = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
      aws-access-key-id = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
      aws-secret-acccess-key = ${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
    }

    smtp {
      from = "info@openolitor.ch"
      from = ${?OO_SERVICES.smtp-object.csa8.from}
      endpoint = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod1.credentials.hostname}
      endpoint = ${?OO_SERVICES.smtp-object.csa8.credentials.hostname}
      port = 25
      port = ${?OO_SERVICES.smtp-object.csa8.credentials.port}
      user = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod1.credentials.username}
      user = ${?OO_SERVICES.smtp-object.csa8.credentials.username}
      password = ${?OO_SERVICES.smtp-object.csa8.credentials.password}
      password = ${?OO_SERVICES.smtp-object.csa8.credentials.password}
      number-of-retries = 5
      number-of-retries = ${?OO_SERVICES.smtp-object.csa8.number-of-retries}
      send-email = false
      send-email = ${?OO_SERVICES.smtp-object.csa8.send-email}
    }

    converttopdf {
      endpoint = "http://pdftools.openolitor.ch/convert2pdf"
    }
  },
  csa7: {
    name: "csa7",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix = ""
      referenznummer-prefix = ${?OO_SERVICES.buchhaltung-object.csa7.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length = 6
      kunde-id-length = 5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer = "777777777"
      teilnehmernummer = ${?OO_SERVICES.buchhaltung-object.csa7.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://csa7wwwtest.applicationcloud.io"]
      }
      zugang-base-url = "https://csa7wwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url = "https://csa7wwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require = false
        require = ${?OO_SERVICES.security-object.csa7.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
    akka-persistence-sql-async {
      url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.database}
      user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.username}
      password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.password}
    }

    # Mandant specific db settings
    db: {
      default: {
        url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.database}
        user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.username}
        password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_CSA7.credentials.password}
      }
    }

    s3 {
      aws-endpoint = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
      aws-access-key-id = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
      aws-secret-acccess-key = ${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
    }

    smtp {
      from = "info@openolitor.ch"
      from = ${?OO_SERVICES.smtp-object.csa7.from}
      endpoint = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod1.credentials.hostname}
      endpoint = ${?OO_SERVICES.smtp-object.csa7.credentials.hostname}
      port = 25
      port = ${?OO_SERVICES.smtp-object.csa7.credentials.port}
      user = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod1.credentials.username}
      user = ${?OO_SERVICES.smtp-object.csa7.credentials.username}
      password = ${?OO_SERVICES.smtp-object.csa7.credentials.password}
      password = ${?OO_SERVICES.smtp-object.csa7.credentials.password}
      number-of-retries = 5
      number-of-retries = ${?OO_SERVICES.smtp-object.csa7.number-of-retries}
      send-email = false
      send-email = ${?OO_SERVICES.smtp-object.csa7.send-email}
    }

    converttopdf {
      endpoint = "http://pdftools.openolitor.ch/convert2pdf"
    }
  },
  landolfshausen: {
    name: "landolfshausen",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix = ""
      referenznummer-prefix = ${?OO_SERVICES.buchhaltung-object.landolfshausen.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length = 6
      kunde-id-length = 5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer = "777777777"
      teilnehmernummer = ${?OO_SERVICES.buchhaltung-object.landolfshausen.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://landolfshausenwwwtest.applicationcloud.io"]
      }
      zugang-base-url = "https://landolfshausenwwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url = "https://landolfshausenwwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require = false
        require = ${?OO_SERVICES.security-object.landolfshausen.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
    akka-persistence-sql-async {
      url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.database}
      user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.username}
      password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.password}
    }

    # Mandant specific db settings
    db: {
      default: {
        url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.database}
        user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.username}
        password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_landolfshausen.credentials.password}
      }
    }

    s3 {
      aws-endpoint = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
      aws-access-key-id = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
      aws-secret-acccess-key = ${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
    }

    smtp {
      from = "info@openolitor.ch"
      from = ${?OO_SERVICES.smtp-object.landolfshausen.from}
      endpoint = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod2.credentials.hostname}
      endpoint = ${?OO_SERVICES.smtp-object.landolfshausen.credentials.hostname}
      port = 25
      port = ${?OO_SERVICES.smtp-object.landolfshausen.credentials.port}
      user = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod2.credentials.username}
      user = ${?OO_SERVICES.smtp-object.landolfshausen.credentials.username}
      password = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod2.credentials.password}
      password = ${?OO_SERVICES.smtp-object.landolfshausen.credentials.password}
      number-of-retries = 5
      number-of-retries = ${?OO_SERVICES.smtp-object.landolfshausen.number-of-retries}
      send-email = false
      send-email = ${?OO_SERVICES.smtp-object.landolfshausen.send-email}
    }

    converttopdf {
      endpoint = "http://pdftools.openolitor.ch/convert2pdf"
    }
  },
  nuertingen: {
    name: "nuertingen",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix = ""
      referenznummer-prefix = ${?OO_SERVICES.buchhaltung-object.nuertingen.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length = 6
      kunde-id-length = 5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer = "777777777"
      teilnehmernummer = ${?OO_SERVICES.buchhaltung-object.nuertingen.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://nuertingenwwwtest.applicationcloud.io"]
      }
      zugang-base-url = "https://nuertingenwwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url = "https://nuertingenwwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require = false
        require = ${?OO_SERVICES.security-object.nuertingen.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
    akka-persistence-sql-async {
      url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.database}
      user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.username}
      password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.password}
    }

    # Mandant specific db settings
    db: {
      default: {
        url = "jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.database}
        user = ${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.username}
        password = ${?VCAP_SERVICES.mariadbent-object.MariaDB_nuertingen.credentials.password}
      }
    }

    s3 {
      aws-endpoint = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
      aws-access-key-id = ${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
      aws-secret-acccess-key = ${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
    }

    smtp {
      from = "info@openolitor.ch"
      from = ${?OO_SERVICES.smtp-object.nuertingen.from}
      endpoint = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod3.credentials.hostname}
      endpoint = ${?OO_SERVICES.smtp-object.nuertingen.credentials.hostname}
      port = 25
      port = ${?OO_SERVICES.smtp-object.nuertingen.credentials.port}
      user = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod3.credentials.username}
      user = ${?OO_SERVICES.smtp-object.nuertingen.credentials.username}
      password = ${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod3.credentials.password}
      password = ${?OO_SERVICES.smtp-object.nuertingen.credentials.password}
      number-of-retries = 5
      number-of-retries = ${?OO_SERVICES.smtp-object.nuertingen.number-of-retries}
      send-email = false
      send-email = ${?OO_SERVICES.smtp-object.nuertingen.send-email}
    }

    converttopdf {
      endpoint = "http://pdftools.openolitor.ch/convert2pdf"
    }
  },
  nordheide: {
    name: "nordheide",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix=""
      referenznummer-prefix=${?OO_SERVICES.buchhaltung-object.nordheide.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length=6
      kunde-id-length=5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer="777777777"
      teilnehmernummer=${?OO_SERVICES.buchhaltung-object.nordheide.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://nordheidewwwtest.applicationcloud.io"]
      }
      zugang-base-url="https://nordheidewwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url="https://nordheidewwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require=false
        require=${?OO_SERVICES.security-object.nordheide.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
      akka-persistence-sql-async {
        url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.database}
        user=${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.username}
        password=${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.password}
      }

    # Mandant specific db settings
      db: {
        default: {
          url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.database}
          user=${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.username}
          password=${?VCAP_SERVICES.mariadbent-object.MariaDB_nordheide.credentials.password}
        }
      }

      s3 {
        aws-endpoint=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
        aws-access-key-id=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
        aws-secret-acccess-key=${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
      }

      smtp {
        from="info@openolitor.ch"
        from=${?OO_SERVICES.smtp-object.nordheide.from}
        endpoint=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.hostname}
        endpoint=${?OO_SERVICES.smtp-object.nordheide.credentials.hostname}
        port=25
        port=${?OO_SERVICES.smtp-object.nordheide.credentials.port}
        user=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.username}
        user=${?OO_SERVICES.smtp-object.nordheide.credentials.username}
        password=${?OO_SERVICES.smtp-object.nordheide.credentials.password}
        number-of-retries=5
        number-of-retries=${?OO_SERVICES.smtp-object.nordheide.number-of-retries}
        send-email=false
        send-email=${?OO_SERVICES.smtp-object.nordheide.send-email}
      }

      converttopdf {
        endpoint="http://pdftools.openolitor.ch/convert2pdf"
      }
  },
kassel: {
    name: "kassel",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix=""
      referenznummer-prefix=${?OO_SERVICES.buchhaltung-object.kassel.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length=6
      kunde-id-length=5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer="777777777"
      teilnehmernummer=${?OO_SERVICES.buchhaltung-object.kassel.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://kasselwwwtest.applicationcloud.io"]
      }
      zugang-base-url="https://kasselwwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url="https://kasselwwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require=false
        require=${?OO_SERVICES.security-object.kassel.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
      akka-persistence-sql-async {
        url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.database}
        user=${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.username}
        password=${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.password}
      }

    # Mandant specific db settings
      db: {
        default: {
          url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.database}
          user=${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.username}
          password=${?VCAP_SERVICES.mariadbent-object.MariaDB_kassel.credentials.password}
        }
      }

      s3 {
        aws-endpoint=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
        aws-access-key-id=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
        aws-secret-acccess-key=${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
      }

      smtp {
        from="info@openolitor.ch"
        from=${?OO_SERVICES.smtp-object.kassel.from}
        endpoint=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.hostname}
        endpoint=${?OO_SERVICES.smtp-object.kassel.credentials.hostname}
        port=25
        port=${?OO_SERVICES.smtp-object.kassel.credentials.port}
        user=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.username}
        user=${?OO_SERVICES.smtp-object.kassel.credentials.username}
        password=${?OO_SERVICES.smtp-object.kassel.credentials.password}
        number-of-retries=5
        number-of-retries=${?OO_SERVICES.smtp-object.kassel.number-of-retries}
        send-email=false
        send-email=${?OO_SERVICES.smtp-object.kassel.send-email}
      }

      converttopdf {
        endpoint="http://pdftools.openolitor.ch/convert2pdf"
      }
  },
ulm: {
    name: "ulm",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix=""
      referenznummer-prefix=${?OO_SERVICES.buchhaltung-object.ulm.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length=6
      kunde-id-length=5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer="777777777"
      teilnehmernummer=${?OO_SERVICES.buchhaltung-object.ulm.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://ulmwwwtest.applicationcloud.io"]
      }
      zugang-base-url="https://ulmwwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url="https://ulmwwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require=false
        require=${?OO_SERVICES.security-object.ulm.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
      akka-persistence-sql-async {
        url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.database}
        user=${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.username}
        password=${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.password}
      }

    # Mandant specific db settings
      db: {
        default: {
          url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.database}
          user=${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.username}
          password=${?VCAP_SERVICES.mariadbent-object.MariaDB_ulm.credentials.password}
        }
      }

      s3 {
        aws-endpoint=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
        aws-access-key-id=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
        aws-secret-acccess-key=${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
      }

      smtp {
        from="info@openolitor.ch"
        from=${?OO_SERVICES.smtp-object.ulm.from}
        endpoint=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.hostname}
        endpoint=${?OO_SERVICES.smtp-object.ulm.credentials.hostname}
        port=25
        port=${?OO_SERVICES.smtp-object.ulm.credentials.port}
        user=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.username}
        user=${?OO_SERVICES.smtp-object.ulm.credentials.username}
        password=${?OO_SERVICES.smtp-object.ulm.credentials.password}
        number-of-retries=5
        number-of-retries=${?OO_SERVICES.smtp-object.ulm.number-of-retries}
        send-email=false
        send-email=${?OO_SERVICES.smtp-object.ulm.send-email}
      }

      converttopdf {
        endpoint="http://pdftools.openolitor.ch/convert2pdf"
      }
  },
dublincsa: {
    name: "dublincsa",
    port: null,
    webservicePort: null,

    # Buchhaltung
    buchhaltung: {
      # Der Prefix hat zusammen mit der Rechnungsnummer (200000) und der Kundennummer(30000) eine maximale Länge von 26 Zeichen
      referenznummer-prefix=""
      referenznummer-prefix=${?OO_SERVICES.buchhaltung-object.dublincsa.referenznummer-prefix}
      # Die Rechnungsnummer & Kundennummer in der Referenznummer werden mit Nullen bis zu diesen Längen von vorne aufgefüllt
      rechnung-id-length=6
      kunde-id-length=5
      # Teilnehmernummer ohne Sonderzeichen [0-9]{9}
      teilnehmernummer="777777777"
      teilnehmernummer=${?OO_SERVICES.buchhaltung-object.dublincsa.teilnehmernummer}
    }

    # Security configuration
    security {
      cors {
        allow-origin = ["https://dublincsawwwtest.applicationcloud.io"]
      }
      zugang-base-url="https://dublincsawwwtest.applicationcloud.io/#/zugangaktivieren"
      passwort-reset-base-url="https://dublincsawwwtest.applicationcloud.io/#/zugangaktivieren"

      second-factor-auth {
        require=false
        require=${?OO_SERVICES.security-object.dublincsa.second-factor-auth.require}
      }
    }

    # Project specific akka persistence configuration
      akka-persistence-sql-async {
        url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.database}
        user=${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.username}
        password=${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.password}
      }

    # Mandant specific db settings
      db: {
        default: {
          url="jdbc:mysql://"${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.host}":"${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.port}"/"${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.database}
          user=${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.username}
          password=${?VCAP_SERVICES.mariadbent-object.MariaDB_dublincsa.credentials.password}
        }
      }

      s3 {
        aws-endpoint=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessHost}
        aws-access-key-id=${?VCAP_SERVICES.dynstrg-object.0.credentials.accessKey}
        aws-secret-acccess-key=${?VCAP_SERVICES.dynstrg-object.0.credentials.sharedSecret}
      }

      smtp {
        from="info@openolitor.ch"
        from=${?OO_SERVICES.smtp-object.dublincsa.from}
        endpoint=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.hostname}
        endpoint=${?OO_SERVICES.smtp-object.dublincsa.credentials.hostname}
        port=25
        port=${?OO_SERVICES.smtp-object.dublincsa.credentials.port}
        user=${?VCAP_SERVICES.sendgrid-object.openolitor-smtp-prod4.credentials.username}
        user=${?OO_SERVICES.smtp-object.dublincsa.credentials.username}
        password=${?OO_SERVICES.smtp-object.dublincsa.credentials.password}
        number-of-retries=5
        number-of-retries=${?OO_SERVICES.smtp-object.dublincsa.number-of-retries}
        send-email=false
        send-email=${?OO_SERVICES.smtp-object.dublincsa.send-email}
      }

      converttopdf {
        endpoint="http://pdftools.openolitor.ch/convert2pdf"
      }
  },
  # DB Seed configuration
  db.default.seed {
    models = [
      ch.openolitor.core.models.PersonId,
      ch.openolitor.stammdaten.models.ProjektId,
      ch.openolitor.stammdaten.models.DepotId,
      ch.openolitor.stammdaten.models.TourId,
      ch.openolitor.stammdaten.models.KundeId,
      ch.openolitor.stammdaten.models.AbotypId,
      ch.openolitor.stammdaten.models.AboId,
      ch.openolitor.stammdaten.models.ProduktId,
      ch.openolitor.stammdaten.models.ProduzentId,
      ch.openolitor.stammdaten.models.VertriebId,
      ch.openolitor.stammdaten.models.EinladungId,
      ch.openolitor.stammdaten.models.SammelbestellungId,
      ch.openolitor.stammdaten.models.AuslieferungId,
      ch.openolitor.buchhaltung.models.RechnungId,
      ch.openolitor.stammdaten.models.SammelbestellungId,
      ch.openolitor.buchhaltung.models.RechnungId,
      ch.openolitor.buchhaltung.models.RechnungsPositionId]

    mappings {
      ch.openolitor.core.models {
        PersonId = 40000
      }
      ch.openolitor.stammdaten.models {
        ProjektId = 1000
        DepotId = 10000
        TourId = 20000
        KundeId = 30000
        AbotypId = 50000
        ProduktId = 60000
        ProduzentId = 70000
        AboId = 100000
        EinladungId = 120000
        SammelbestellungId = 300000
        VertriebId = 110000
        AuslieferungId = 130000
      }
      ch.openolitor.buchhaltung.models {
        RechnungId = 200000
        RechnungsPositionId = 400000
      }
    }
  }

  # Security configuration
  security {
    second-factor-auth {
      require = false
    }

    # max 600s delay
    max-request-delay = 600000
  }

  airbrake {
    enabled = true
    api-key = "703e15c93a9dd95f15f4b4e44cb3911c"
    ssl = true
    endpoint = "errbit.tegonal.com"
    notifier-js = "http://errbit.tegonal.com/javascripts/notifier.js"
  }
}

# Default akka configuration
akka {
  loglevel = "DEBUG",
  stdout-loglevel = "DEBUG",
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter",
  persistence {
    journal.plugin = "akka-persistence-sql-async.journal"
    snapshot-store.plugin = "akka-persistence-sql-async.snapshot-store"
  },
  actor {
    serializers {
      event-serializer = "ch.openolitor.core.eventsourcing.EventStoreSerializer"
    },
    serialization-bindings {
      "ch.openolitor.core.domain.PersistentEvent" = event-serializer
    }
  }
}

# Default akka-persistence configuration
akka-persistence-sql-async {
  journal.class = "akka.persistence.journal.sqlasync.MySQLAsyncWriteJournal"
  snapshot-store.class = "akka.persistence.snapshot.sqlasync.MySQLSnapshotStore"

  wait-queue-capacity = 10000

  metadata-table-name = "persistence_metadata"
  journal-table-name = "persistence_journal"
  snapshot-table-name = "persistence_snapshot"
}

# Configure own dispatcher for the reportsystem to control max used ressources
akka.actor.deployment {
  /oo-system/report-system {
    dispatcher = report-dispatcher
  }
}
report-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 2
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 2.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}
